openapi: 3.0.0
info:
  title: 'MKR API for Moco'
  description: 'REST API for Moco-MKR integration. TODO: (1) Заменить формат времени на Unix Timestamp'
  contact:
    name: Support
    email: support@mkr.org.ua
  version: 0.1.0
paths:
  /login:
    post:
      tags:
        - Auth
      summary: Аутентификация
      description: Аутентификация клиентского приложения по логину, паролю и идентификатору приложения
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginForm'
      responses:
        200:
          description: 'Токен авторизации'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        422:
          $ref: '#/components/responses/422'
        500:
          $ref: '#/components/responses/500'
  /org/structures:
    get:
      tags:
        - OrgChart
      summary: 'Получение полного списка организационных структур'
      description: 'Получение полного плоского списка организационных струтур. Структура -- это объект, предствляющий собой организацию. Пример: университет, институт. В древовидной иерарархии подразделений Структура предствляет собой объект самого верхнего уровня. В выборку попадают неудаленные структуры и структуры, удаленные не ранее 30 дней до момента запроса'
      operationId: getAllStructures
      responses:
        200:
          description: 'Список структур'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Structure'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
  /org/faculties:
    get:
      tags:
        - OrgChart
      summary: 'Получение полного списка факультетов'
      description: 'Получение полного плоского списка факультетов. В древовидной иерарархии подразделений Факультет предствляет собой объект второго уровня. В выборку попадают неудаленные факультеты и факультеты, удаленные не ранее 30 дней до момента запроса.'
      operationId: getAllFaculties
      responses:
        200:
          description: 'Список факультетов'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Faculty'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
  /org/chairs:
    get:
      tags:
        - OrgChart
      summary: 'Получение полного списка кафедр'
      description: 'Получение полного плоского списка кафедр. В древовидной иерарархии подразделений Кафедра предствляет собой объект третьего уровня. В выборку попадают неудаленные кафедры и кафедры, удаленные не ранее 30 дней до момента запроса.'
      operationId: getAllChairs
      responses:
        200:
          description: 'Список кафедр'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Chair'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
  /org/jobtitles:
    get:
      tags:
        - OrgChart
      summary: 'Получение полного списка должностей'
      description: 'Получение полного плоского списка должностей. В выборку попадают неудаленные должности и должности, удаленные не ранее 30 дней до момента запроса.'
      operationId: getAllJobTitles
      responses:
        200:
          description: 'Список должностей'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobTitle'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
  /org/specialities:
    post:
      tags:
        - OrgChart
      summary: 'Постраничное получение полного списка специальностей'
      description: 'Постраничное получение полного плоского списка специальностей. В выборку попадают неудаленные специальности и специальности, удаленные не ранее 30 дней до момента запроса.'
      operationId: getAllSpecialities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPageQuery'
      responses:
        200:
          description: 'Список специальностей'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Speciality'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        422:
          $ref: '#/components/responses/422'
  /org/specializations:
    post:
      tags:
        - OrgChart
      summary: 'Постраничное получение полного списка специализаций'
      description: 'Постраничное получение полного плоского списка специализаций. В выборку попадают неудаленные специализации и специализации, удаленные не ранее 30 дней до момента запроса.'
      operationId: getAllSpecializations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPageQuery'
      responses:
        200:
          description: 'Список специализаций'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Specialization'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        422:
          $ref: '#/components/responses/422'
  /org/groups:
    post:
      tags:
        - OrgChart
      summary: 'Постраничное получение полного списка групп студентов'
      description: 'Постраничное получение полного плоского списка групп студентов. В выборку попадают неудаленные группы и группы, удаленные не ранее 30 дней до момента запроса.'
      operationId: getAllGroups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPageQuery'
      responses:
        200:
          description: 'Список групп студентов'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        422:
          $ref: '#/components/responses/422'
  /org/employees:
    post:
      tags:
        - OrgChart
      summary: 'Постраничное получение полного списка сотрудников (в том числе преподавателей)'
      description: 'Постраничное получение полного списка сотрудников (в том числе преподавателей). В выборку попадают неуволенные сотрудники и сотрудники, уволенные не ранее 30 дней до момента запроса.'
      operationId: getAllEmployees
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPageQuery'
      responses:
        200:
          description: 'Список сотрудников'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        422:
          $ref: '#/components/responses/422'
  /org/students:
    post:
      tags:
        - OrgChart
      summary: 'Постраничное получение полного списка студентов'
      description: 'Постраничное получение полного списка студентов. В выборку попадают зачисленные студенты и студенты, отчисленные не ранее 30 дней до момента запроса.'
      operationId: getAllStudents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPageQuery'
      responses:
        200:
          description: 'Список сотрудников'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        422:
          $ref: '#/components/responses/422'
  /org/classrooms:
    post:
      tags:
        - OrgChart
      summary: 'Постраничное получение полного списка учебных аудиторий'
      description: 'Постраничное получение полного списка учебных аудиторий. В выборку попадают неудаленные аудитории и аудитории, удаленные не ранее 30 дней до момента запроса.'
      operationId: getAllClassrooms
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPageQuery'
      responses:
        200:
          description: 'Список учебных аудиторий'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Classroom'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        422:
          $ref: '#/components/responses/422'
  /edu/disciplines:
    post:
      tags:
        - Academic
      summary: 'Получение полного списка идентификаторов активных дисциплин обучения'
      description: 'Получение полного списка идентификаторов дисциплин обучения, используемых в заданном учебном году и его полугодии (семестре)'
      operationId: getAllDisciplines
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisciplineIdsQuery'
      responses:
        200:
          description: 'Список идентификаторов активных дисциплин обучения'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DisciplineIds'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        422:
          $ref: '#/components/responses/422'
  /edu/discipline:
    post:
      tags:
        - Academic
      summary: 'Постраничное получение полного списка дисциплин обучения'
      description: 'Постраничное получение полного списка дисциплин обучения. В выборку попадают неудаленные дисциплины и дисциплины, удаленные не ранее 30 дней до момента запроса.'
      operationId: getDisciplinesDetails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisciplineQuery'
      responses:
        200:
          description: 'Список дисциплин обучения с информацией об учебных планах и нагрузке преподавателей.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Discipline'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        422:
          $ref: '#/components/responses/422'
  /time-table/student:
    post:
      tags:
        - TimeTable
      summary: 'Расписание студента'
      description: 'Расписание студента'
      operationId: getTimeTableStudent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentTimeTableForm'
      responses:
        200:
          description: Расписание
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeTableDate'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        422:
          $ref: '#/components/responses/422'
  /time-table/group:
    post:
      tags:
        - TimeTable
      summary: 'Расписание группы студентов'
      description: 'Расписание группы студентов'
      operationId: getTimeTableGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupTimeTableForm'
      responses:
        200:
          description: Расписание
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeTableDate'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        422:
          $ref: '#/components/responses/422'
  /time-table/teacher:
    post:
      tags:
        - TimeTable
      summary: 'Расписание преподователя'
      description: 'Расписание преподователя'
      operationId: getTimeTableTeacher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeacherTimeTableForm'
      responses:
        200:
          description: Расписание
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeTableDate'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        422:
          $ref: '#/components/responses/422'
components:
  schemas:
    ErrorModel:
      description: 'Схема ошибки'
      properties:
        name:
          description: 'Название ошибки'
          type: string
        message:
          description: 'Описание ошибки'
          type: string
        code:
          description: 'Код ошибки из справочника ошибок МКР'
          type: integer
        status:
          description: 'http статус ответа, в котором клиенту возвращается данная ошибка'
          type: integer
      type: object
    ErrorValidationField:
      description: 'Схема ошибки валидации передаваемого в запросе поля'
      properties:
        field:
          description: 'Название поля'
          type: string
        message:
          description: 'Текст ошибки'
          type: string
      type: object
    LoginForm:
      description: 'Схема запроса логина'
      required:
        - username
        - password
        - app_key
      properties:
        username:
          description: username
          type: string
        password:
          description: password
          type: string
        app_key:
          description: app_key
          type: string
      type: object
    AccessToken:
      description: 'Схема токена авторизации'
      properties:
        access_token:
          description: токен
          type: string
      type: object
    DataPageQuery:
      description: 'Запрос страницы данных, начиная с записи, идентификатор которой является следующим в БД МКР за переданным в данном запросе. Используется для реализации постраничного запроса и получения данных при выборке всех данных справочника.'
      required:
        - pageSize
      properties:
        lastRecordId:
          description: 'Идентификатор записи, относительно которой должна быть получена следующая за ней запись. Данная полученная запись будет первой в списке записей, возвращаемых в ответ на данный запрос. При запросе первой страницы справочника не передается.'
          type: string
        pageSize:
          description: 'Количество запрашиваемых записей.'
          type: integer
      type: object
    Structure:
      description: 'Схема Структуры (подразделения верхнего уровня в иерархии подразделений)'
      required:
        - guid
        - fullName
      properties:
        guid:
          description: 'Глобальный уникальный неизменнный идентификатор Структуры. Позволяет Мосо объединить в одном справочнике подразделения разных типов из МКР (Структуры, Факультеты, Кафедры)'
          type: string
          format: uuid
        shortName:
          description: 'Аббревиатура Структуры'
          type: string
        shortNameLatin:
          description: 'Аббревиатура Структуры на латинице'
          type: string
        fullName:
          description: 'Полное название Структуры'
          type: string
        deleted:
          description: 'Дата и время удаления Структуры. Если она удалена'
          type: string
          format: date-time
      type: object
    Faculty:
      description: 'Схема Факультета (подразделения второго уровня в иерархии подразделений)'
      required:
        - guid
        - fullName
        - structureGuid
      properties:
        guid:
          description: 'Глобальный уникальный неизменнный идентификатор Факультета. Позволяет Мосо объединить в одном справочнике подразделения разных типов из МКР (Структуры, Факультеты, Кафедры)'
          type: string
          format: uuid
        shortName:
          description: 'Аббревиатура Факультета'
          type: string
        shortNameLatin:
          description: 'Аббревиатура Факультета на латинице'
          type: string
        fullName:
          description: 'Полное название Факультета'
          type: string
        structureGuid:
          description: 'Глобальный уникальный неизменнный идентификатор Структуры, в состав которой входит Факультет.'
          type: string
        deleted:
          description: 'Дата и время удаления Факультета. Если он удален'
          type: string
          format: date-time
      type: object
    Chair:
      description: 'Схема Кафедры (подразделения третьего уровня в иерархии подразделений)'
      required:
        - guid
        - fullName
        - facultyGuid
      properties:
        guid:
          description: 'Глобальный уникальный неизменнный идентификатор Кафедры. Позволяет Мосо объединить в одном справочнике подразделения разных типов из МКР (Структуры, Факультеты, Кафедры)'
          type: string
          format: uuid
        shortName:
          description: 'Аббревиатура Кафедры'
          type: string
        shortNameLatin:
          description: 'Аббревиатура Кафедры на латинице'
          type: string
        fullName:
          description: 'Полное название Кафедры'
          type: string
        facultyGuid:
          description: 'Глобальный уникальный неизменнный идентификатор Факультета, в состав которого входит Кафедра.'
          type: string
        deleted:
          description: 'Дата и время удаления Кафедры. Если она удалена'
          type: string
          format: date-time
      type: object
    JobTitle:
      description: 'Схема Должности сотрудника'
      required:
        - id
        - title
      properties:
        id:
          description: 'Уникальный неизменнный идентификатор Должности'
          type: integer
        title:
          description: 'Полное название Должности'
          type: string
        deleted:
          description: 'Дата и время удаления Должности. Если она удалена'
          type: string
          format: date-time
      type: object
    Speciality:
      description: 'Схема Специальности'
      required:
        - id
        - name
        - code
      properties:
        id:
          description: 'Уникальный неизменный идентификатор специальности'
          type: integer
        name:
          description: 'Название специальности'
          type: string
        nameLatin:
          description: 'Название специальности на латинице'
          type: integer
        сode:
          description: 'Код специальности, присвоенный заведением или на государственном уровне'
          type: string
        facultyId:
          description: 'Идентификатор факультета, к которому привязана Специальность.'
          type: integer
        deleted:
          description: 'Дата и время удаления специальности. Если она удалена'
          type: string
          format: date-time
      type: object
    Specialization:
      description: 'Схема Специализации'
      required:
        - id
        - name
        - code
      properties:
        id:
          description: 'Уникальный неизменный идентификатор специализации'
          type: integer
        name:
          description: 'Название специализации'
          type: string
        nameLatin:
          description: 'Название специализации на латинице'
          type: integer
        сode:
          description: 'Код специализации, присвоенный заведением или на государственном уровне'
          type: string
        deleted:
          description: 'Дата и время удаления специализации. Если она удалена'
          type: string
          format: date-time
      type: object
    Group:
      description: 'Схема группы студентов'
      required:
        - id
        - name
        - specialityId
      properties:
        id:
          description: 'Уникальный неизменный идентификатор группы'
          type: integer
        name:
          description: 'Название группы'
          type: string
        course:
          description: 'Номер курса, на котором находится группа (от 1 до 6)'
          type: integer
        educationForm:
          description: 'Форма обучения ::= fulltime | parttime | extramural'
          type: string
        specialityId:
          description: 'Идентификатор специальности, по которой обучается группа.'
          type: integer
        specializationId:
          description: 'Идентификатор специализации, по которой обучается группа (если задан).'
          type: integer
        deleted:
          description: 'Дата и время удаления группы. Если она удалена'
          type: string
          format: date-time
      type: object
    Person:
      description: 'Схема Персоны. Персона является базовой сущностью для Сотрудника и Студента.'
      required:
        - id
        - globalId
        - firstName
        - lastName
        - divisionGuid
      properties:
        id:
          description: 'Уникальный неизменяемый идентификатор персоны'
          type: integer
        globalId:
          description: 'Глобальный уникальный неизменяемый идентификатор персоны, формируемый, как хеш-функция от ее индивидуального налогового номера'
          type: string
        firstName:
          description: 'Имя'
          type: string
        secondName:
          description: 'Отчество'
          type: string
        lastName:
          description: 'Фамилия'
          type: string
        username:
          description: 'Логин'
          type: string
        email:
          description: 'Электронная почта'
          type: string
          format: email
        mobile:
          description: 'Номер мобильного телефона'
          type: string
        taxNumber:
          description: 'Индивидуальный налоговый номер'
          type: string
        divisionGuid:
          description: 'Идентификатор подразделения, к которому привязана персона'
          type: string
        chiefs:
          description: 'Список руководителей персоны'
          type: array
          items:
            $ref: '#/components/schemas/Chief'
      type: object
    Chief:
      description: 'Схема Руководителя Персоны.'
      required:
        - chiefType
        - chiefId
      properties:
        chiefType:
          description: 'Тип руководителя ::= administrative_chief | functional_chief | ...'
          type: string
        chiefId:
          description: 'Идентификатор персоны, выступающей руководителем'
          type: integer
      type: object
    Employee:
      description: 'Схема Сотрудника ВУЗа (чаще всего преподавателя)'
      required:
        - hireDate
        - jobTitle
      allOf:
        -
          $ref: '#/components/schemas/Person'
        -
          properties:
            personnelNumber:
              description: 'Табельный номер сотрудника'
              type: string
            hireDate:
              description: 'Дата приема на основную позицию'
              type: string
              format: date-time
            fireDate:
              description: 'Дата увольнения с основной позиции'
              type: string
              format: date-time
            jobTitle:
              description: 'Идентификатор должности сотрудника'
              type: integer
          type: object
    Student:
      description: 'Схема Студента'
      required:
        - studentNumber
        - hireDate
      allOf:
        -
          $ref: '#/components/schemas/Person'
        -
          properties:
            studentNumber:
              description: 'Учетный номер сотрудника'
              type: string
            groupId:
              description: 'Идентификатор группы, в которую входит студентв'
              type: integer
            status:
              description: 'Статус студента в МКР ::= ???'
              type: string
            isContract:
              description: 'Является контрактным студентом'
              type: integer
            course:
              description: 'Номер курса, на котором находится студент (от 1 до 6)'
              type: integer
            educationForm:
              description: 'Форма обучения ::= fulltime | parttime | extramural'
              type: string
            gradeLevel:
              description: 'Уровень получаемого студентом образования ::= bachelor | master'
              type: string
            specialityId:
              description: 'Идентификатор специальности студента'
              type: integer
            specializationId:
              description: 'Идентификатор специализации студента'
              type: integer
            entryDate:
              description: 'Дата зачисления'
              type: string
              format: date-time
            closeDate:
              description: 'Дата завершения обучения студента'
              type: string
              format: date-time
          type: object
    Classroom:
      description: 'Схема учебной аудитории'
      required:
        - id
        - name
      properties:
        id:
          description: 'Уникальный неизменный идентификатор аудитории'
          type: integer
        name:
          description: 'Название аудитории'
          type: string
        seats:
          description: 'Количество мест'
          type: integer
        type:
          description: 'Тип ::= lecture | lab'
          type: string
        deleted:
          description: 'Дата и время удаления учебной аудитории. Если она удалена'
          type: string
          format: date-time
      type: object
    DisciplineIdsQuery:
      description: 'Запрос списка идентификаторов активных дисцлиплины для заданного учебного года и его семестра.'
      required:
        - academicYear
        - semester
      properties:
        academicYear:
          description: 'Календарной год, в котором начался учебный год. Например, для учебного года 2019/2020 должно передаваться значение 2019.'
          type: integer
        semester:
          description: 'Номер семестра (полугодия) внутри учебного года: 0 - осень, 1 - весна.'
          type: integer
      type: object
    DisciplineIds:
      description: 'Схема списка идентификаторов дисциплин'
      required:
        - disciplineIds
      properties:
        disciplineIds:
          description: 'Список идентификаторов дисциплин'
          type: array
          items:
            type: integer
      type: object
    DisciplineQuery:
      description: 'Запрос подробной информации по перечисленным дисциплинам в рамках заданного учебного года и его семестра.'
      required:
        - disciplineIds
        - academicYear
        - semester
      properties:
        disciplineIds:
          description: 'Список идентификаторов запрашиваемых дисциплин'
          type: array
          items:
            type: integer
        academicYear:
          description: 'Календарной год, в котором начался учебный год. Например, для учебного года 2019/2020 должно передаваться значение 2019.'
          type: integer
        semester:
          description: 'Номер семестра (полугодия) внутри учебного года: 0 - осень, 1 - весна.'
          type: integer
      type: object
    Discipline:
      description: 'Схема дисциплины обучения'
      required:
        - id
        - title
        - shortTitle
      properties:
        id:
          description: 'Уникальный неизменный идентификатор дисципины'
          type: integer
        title:
          description: 'Полное название дисциплины'
          type: string
        shortTitle:
          description: 'Сокращенное название дисциплины'
          type: string
        specialityId:
          description: '???? Идентификатор специальности, к которой относится дисциплина. В том числе используется Мосо для привязки дисциплины к категории.'
          type: integer
        semesterOfYear:
          description: 'Номер семестра, в котором происходит обучение дисциплине. Значение от 1 до 12.'
          type: integer
        course:
          description: 'Номер курса, на котором происходит обучение дисциплине (от 1 до 6)'
          type: integer
        learningPlans:
          description: 'Список Учебных планов, в которые входит данная Дисциплине'
          type: array
          items:
            $ref: '#/components/schemas/LearningPlan'
        teachersIds:
          description: 'Список идентификаторов сотрудников (Преподавателей), которые должны иметь доступ на просмотр материалов данной Дисциплины. Они участвуют или могут участвовать в проведении обучения по дисциплине'
          type: array
          items:
            type: integer
        startDate:
          description: 'Дата начала доступности дисциплины. Может соответствовать дате создания или дате публикации дисциплины в МКР.'
          type: string
          format: date-time
        deleted:
          description: 'Дата и время удаления учебной аудитории. Если она удалена'
          type: string
          format: date-time
      type: object
    LearningPlan:
      description: 'Учебный план, отражающий назначение Группы на Дисциплину'
      required:
        - id
        - gropuId
      properties:
        id:
          description: 'Уникальный неизменный идентификатор Учебного плана'
          type: integer
        groupId:
          description: 'Идентификатор группы студента, которая проходит данную дисциплину'
          type: integer
        chairId:
          description: 'Идентификатор кафедры, которая проводит обучение по данной дисциплине (Использование в Мосо еще не определено)'
          type: integer
        academicLoads:
          description: 'Нагрузка на преподавателей по Дисциплине в рамках данного учебного плана'
          type: array
          items:
            $ref: '#/components/schemas/AcademicLoad'
        deleted:
          description: 'Дата и время удаления учебного плана для группы. Если он удалена'
          type: string
          format: date-time
      type: object
    AcademicLoad:
      description: 'Академическая нагрузка, отражающая привязку типа учебного занятия Дисциплины к Сотруднику (Преподавателю)'
      required:
        - id
        - teacherId
        - learningActivityType
      properties:
        id:
          description: 'Уникальный неизменный идентификатор Нагрузки'
          type: integer
        teacherId:
          description: 'Идентификатор Персоны (преподавателя), с которой связана данная акадеическая нагрузка'
          type: integer
        learningActivityType:
          description: 'Тип учебного занятия (лекция, лабораторная работа и т.п.)'
          type: integer
        hours:
          description: 'Объем нагрузки преподавателя по данному типу учебного занятия в Дисциплине в часах'
          type: integer
        deleted:
          description: 'Дата и время удаления академической нагрузки. Если он удалена'
          type: string
          format: date-time
      type: object
    StudentTimeTableForm:
      description: 'Форма запроса для получения расписания студента'
      required:
        - studentId
        - dateStart
        - dateEnd
      properties:
        studentId:
          description: 'Идентификатор персоны (студента'
          type: integer
        dateStart:
          description: 'Дата с которой нужно получить события в расписании'
          type: string
          format: date
        dateEnd:
          description: 'Дата до которой нужно получить события в расписании'
          type: string
          format: date
      type: object
    GroupTimeTableForm:
      description: 'Форма запроса для получения расписания группы студентов'
      required:
        - groupId
        - dateStart
        - dateEnd
      properties:
        groupId:
          description: 'Идентификатор группы студентов'
          type: integer
        dateStart:
          description: 'Дата с которой нужно получить события в расписании'
          type: string
          format: date
        dateEnd:
          description: 'Дата до которой нужно получить события в расписании'
          type: string
          format: date
      type: object
    TeacherTimeTableForm:
      description: 'Форма запроса для получения расписания преподователя'
      required:
        - teacherId
        - dateStart
        - dateEnd
      properties:
        teacherId:
          description: 'Идентификатор персоны (преподавателя)'
          type: integer
        dateStart:
          description: 'Дата с которой нужно получить события в расписании'
          type: string
          format: date
        dateEnd:
          description: 'Дата до которой нужно получить события в расписании'
          type: string
          format: date
      type: object
    TimeTableDate:
      description: 'Схема расписания одного дня'
      properties:
        date:
          description: 'Дата дня'
          type: string
          format: date
        lessons:
          description: 'Список учебных пар'
          type: array
          items:
            $ref: '#/components/schemas/TimeTableLesson'
      type: object
    TimeTableLesson:
      description: 'Схема учебной пары в расписании'
      properties:
        number:
          description: 'Номер расписания занятия внутри пары'
          type: integer
        periods:
          description: 'Массив расписаний занятий внутри пары'
          type: array
          items:
            $ref: '#/components/schemas/TimeTablePeriod'
      type: object
    TimeTablePeriod:
      description: 'Схема расписания занятия внутри учебной пары'
      properties:
        disciplineId:
          description: 'Идентификатор дисциплины'
          type: integer
        disciplineFullName:
          description: 'Полное название Дисциплины'
          type: string
        disciplineShortName:
          description: 'Сокращенное название Дисциплины'
          type: string
        classroomId:
          description: 'Идентификатор аудитории'
          type: string
        classroomName:
          description: 'Название аудитории'
          type: string
        timeStart:
          description: 'Время начала занятия'
          type: string
          format: time
        timeEnd:
          description: 'Время конца занятия'
          type: string
          format: time
        teachersName:
          description: 'Сокращенные имена преподователей'
          type: string
        teachersNameFull:
          description: 'Полные имена преподователей'
          type: string
        type:
          description: 'Тип занятия'
          type: integer
        dateUpdated:
          description: 'Дата послденего обновления'
          type: string
          format: date-time
        nonstandardTime:
          description: 'Нестандартное время занятия'
          type: boolean
        groups:
          description: 'Названия групп, проходящих данное занятие'
          type: string
          nullable: true
      type: object
  responses:
    401:
      description: 'Unauthorized'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorModel'
    403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorModel'
    422:
      description: 'Validation error'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ErrorValidationField'
    500:
      description: 'Internal Server Error'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorModel'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  -
    name: Auth
    description: 'Аутентификация'
  -
    name: OrgChart
    description: 'Организационная структура'
  -
    name: Academic
    description: 'Учебный процесс'
externalDocs:
  description: 'Ссылка на yaml-исходник данной спецификации'
  url: 'https://bitbucket.org/moco/infotech/src/develop/doc/api_mkr/mkr_moco_api_0.1.0.yaml'