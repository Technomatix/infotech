openapi: 3.0.0
info:
  title: 'Application API'
  description: 'Server - app API'
  contact:
    name: Support
    email: support@mkr.org.ua
  version: 0.1.0
paths:
  /academ/disciplines:
    post:
      tags:
        - Academ
      summary: 'Получение полного списка дисциплин.'
      description: 'Получение полного плоского списка дисциплин.'
      operationId: getAcademDisciplines
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcademForm'
      responses:
        '200':
          description: 'Список дисциплин в выбраном учебном году и семестре'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Discipline'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
  /academ/learning-plans:
    post:
      tags:
        - Academ
      summary: 'Получение учебных планов в выбраном учебном году и семестре по выбраным дисциплинам.'
      description: 'Получение учебных планов в выбраном учебном году и семестре по выбраным дисциплинам.'
      operationId: getAcademLearningPlans
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcademLearningPlansForm'
      responses:
        '200':
          description: 'Учебный планы в выбраном учебном году и семестре по выбраным дисциплинам'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AcademDiscipline'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
  /docs/get-new-docs:
    get:
      tags:
        - Docs
      summary: 'Получить новые документы для пользователя'
      description: 'Получить новые документы для пользователя'
      operationId: getGetNewDocs
      responses:
        '200':
          description: 'Список новых документов для пользователя'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
  /docs/mark-docs-as-read:
    post:
      tags:
        - Docs
      summary: 'Пометить документы как прочитаные'
      description: 'Пометить документы как прочитаные'
      operationId: getMarkDocsAsRead
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkDocsForm'
      responses:
        '204':
          description: 'Успешный запрос'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
  /docs/get-docs-on-control:
    post:
      tags:
        - Docs
      summary: 'Получить документы на контроле, в которых текущий пользователь являеться исполнителем'
      description: 'Получить документы на контроле, в которых текущий пользователь являеться исполнителем'
      operationId: getDocsOnControl
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocsOnControlForm'
      responses:
        '200':
          description: 'Список документов на контроле'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentControl'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
  /list/structures:
    get:
      tags:
        - List
      summary: 'Список струтур'
      description: 'Получить список струтур.'
      operationId: getListStructures
      responses:
        '200':
          description: 'Список струтур'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Structure'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
  /list/faculties:
    post:
      tags:
        - List
      summary: 'Список факультетов'
      description: 'Получить список факультетов.'
      operationId: getListFaculties
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacultiesFilterForm'
      responses:
        '200':
          description: 'Список факультетов'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Faculty'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
  /list/courses:
    post:
      tags:
        - List
      summary: 'Список курсов по факультету'
      description: 'Получить список курсов по факультету.'
      operationId: getListCourses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoursesFilterForm'
      responses:
        '200':
          description: 'Список курсов'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
  /list/groups:
    post:
      tags:
        - List
      summary: 'Список групп  по факультету'
      description: 'Получить список групп по факультету.'
      operationId: getListGroups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupsFilterForm'
      responses:
        '200':
          description: 'Список групп'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
  /list/chairs:
    post:
      tags:
        - List
      summary: 'Список кафедр '
      description: 'Получить список кафедр.'
      operationId: getListChairs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChairsFilterForm'
      responses:
        '200':
          description: 'Список кафедр'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Chair'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
  /list/teachers-by-chair:
    post:
      tags:
        - List
      summary: 'Список преподователей кафедры'
      description: 'Список преподователей кафедры'
      operationId: getListTeachersByChair
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeachersByChairFilterForm'
      responses:
        '200':
          description: 'Список преподователей'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
  /list/students-by-group:
    post:
      tags:
        - List
      summary: 'Список студентов по группе'
      description: 'Список студентов по группе'
      operationId: getListStudentsByGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentsByGroupFilterForm'
      responses:
        '200':
          description: 'Список студентов'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
  /org/structures:
    get:
      tags:
        - Org
      summary: 'Получение полного списка организационных структур'
      description: 'П''Получение полного плоского списка организационных струтур. Структура -- это объект, предствляющий собой организацию. Пример: университет, институт. В древовидной иерарархии подразделений Структура предствляет собой объект самого верхнего уровня. В выборку попадают неудаленные структуры и структуры, удаленные не ранее 30 дней до момента запроса.'
      operationId: getOrgStructures
      responses:
        '200':
          description: 'Список струтур'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrgStructure'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
  /org/faculties:
    post:
      tags:
        - Org
      summary: 'Получение полного списка факультетов.'
      description: 'Получение полного плоского списка факультетов. В древовидной иерарархии подразделений Факультет предствляет собой объект второго уровня. В выборку попадают неудаленные факультеты и факультеты, удаленные не ранее 30 дней до момента запроса.'
      operationId: getOrgFaculties
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacultiesFilterForm'
      responses:
        '200':
          description: 'Список факультетов'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrgFaculty'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
  /org/chairs:
    post:
      tags:
        - Org
      summary: 'Получение полного списка кафедр.'
      description: 'Получение полного плоского списка кафедр. В древовидной иерарархии подразделений Кафедра представляет собой объект второго уровня. В выборку попадают неудаленные кафедры и кафедры, удаленные не ранее 30 дней до момента запроса.'
      operationId: getOrgChairs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChairsFilterForm'
      responses:
        '200':
          description: 'Список кафедр'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrgChair'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
  /org/teacher-identifiers:
    post:
      tags:
        - Org
      summary: 'Получение списка индификаторов преподавателей.'
      description: 'Получение списка индификаторов преподавателей.'
      operationId: getOrgTeacherIdentifiers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeacherIdentifiersForm'
      responses:
        '200':
          description: 'Список индификаторов преподавателей'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeacherIdentifier'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
  /other/search-teachers:
    post:
      tags:
        - Other
      summary: 'Поиск преподователя'
      description: 'Поиск преподователя'
      operationId: getOtherSearchTeachers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeacherSearch'
      responses:
        '200':
          description: 'Список преподователей'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeacherByName'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
  /login:
    post:
      tags:
        - General
      summary: Авторизация
      description: Авторизация
      operationId: getLogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginForm'
      responses:
        '200':
          description: 'Токен авторизации'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        '500':
          $ref: '#/components/responses/500'
        '422':
          $ref: '#/components/responses/422'
  /version:
    get:
      tags:
        - General
      summary: Версия
      description: Версия
      operationId: getVersion
      responses:
        '200':
          description: Версия
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
  /time-table/call-schedule:
    post:
      tags:
        - TimeTable
      summary: 'Расписание звонков'
      description: 'Расписание звонков'
      operationId: getCallSchedule
      responses:
        '200':
          description: 'Список звонков'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CallSchedule'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
  /time-table/group:
    post:
      tags:
        - TimeTable
      summary: 'Расписание группы'
      description: 'Расписание группы'
      operationId: getTimeTableGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupTimeTableForm'
      responses:
        '200':
          description: Расписание
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeTableDate'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
  /time-table/student:
    post:
      tags:
        - TimeTable
      summary: 'Расписание студента'
      description: 'Расписание студента'
      operationId: getTimeTableStudent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentTimeTableForm'
      responses:
        '200':
          description: Расписание
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeTableDate'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
  /time-table/teacher:
    post:
      tags:
        - TimeTable
      summary: 'Расписание преподователя'
      description: 'Расписание преподователя'
      operationId: getTimeTableTeacher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeacherTimeTableForm'
      responses:
        '200':
          description: Расписание
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeTableDate'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
  /time-table/classroom:
    post:
      tags:
        - TimeTable
      summary: 'Расписание Аудитории'
      description: 'Расписание Аудитории'
      operationId: getTimeTableClassroom
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClassroomTimeTableForm'
      responses:
        '200':
          description: Расписание
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeTableDate'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
  /time-table/free-classroom:
    post:
      tags:
        - TimeTable
      summary: 'Список свободных аудиторий'
      description: 'Получить список свободных аудиторий'
      operationId: getFreeClassroom
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FreeClassroomFilterForm'
      responses:
        '200':
          description: 'Список свободных аудиторий'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Classroom'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
  /user/info:
    get:
      tags:
        - User
      summary: 'Данные пользователя'
      description: 'Получить информацию о текущем пользователе'
      operationId: getUserInfo
      responses:
        '200':
          description: 'Информация по пользователю(текущему)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/401'
  /user/change-password:
    post:
      tags:
        - User
      summary: 'Изменение пароля'
      description: 'Изменение пароля'
      operationId: userChangePassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordForm'
      responses:
        '204':
          description: 'Пароль изменен'
        '500':
          $ref: '#/components/responses/500'
        '401':
          $ref: '#/components/responses/401'
        '422':
          $ref: '#/components/responses/422'
components:
  schemas:
    ErrorModel:
      properties:
        name:
          description: 'Название ошибки'
          type: string
        message:
          description: 'Текст ошибки'
          type: string
        code:
          description: 'Код ошибки'
          type: integer
        status:
          description: 'http статус ответа'
          type: integer
      type: object
    ErrorValidationField:
      properties:
        field:
          description: 'Название поля'
          type: string
        message:
          description: 'Текст ошибки'
          type: string
      type: object
    Version:
      description: 'Моделька для версии'
      properties:
        name:
          description: Версия
          type: string
        code:
          description: 'код версии'
          type: string
      type: object
    AcademForm:
      description: 'форма фильтрации дисциплин учебного плана'
      required:
        - year
        - semester
      properties:
        year:
          description: 'Учебный год'
          type: integer
        semester:
          description: Семестр
          type: integer
      type: object
    AcademLearningPlansForm:
      description: 'форма для получения учебных планов по дисциплине'
      required:
        - disciplinesId
        - year
        - semester
      allOf:
        -
          $ref: '#/components/schemas/AcademForm'
        -
          properties:
            disciplinesId:
              description: 'список кодов дсициплин'
              type: array
              items:
                type: integer
          type: object
    ChangePasswordForm:
      description: 'форма для смены пароля'
      required:
        - newPassword
        - password
      properties:
        newPassword:
          description: 'новый пароль'
          type: string
        password:
          description: пароль
          type: string
      type: object
    FacultiesFilterForm:
      description: 'форма для получения списка факультеттов'
      properties:
        structureId:
          description: 'код структуры'
          type: integer
      type: object
    CoursesFilterForm:
      description: 'форма для получения списка курсов'
      required:
        - facultyId
      properties:
        facultyId:
          description: 'код факультета'
          type: integer
      type: object
    GroupsFilterForm:
      description: 'форма для получения списка курсов'
      required:
        - facultyId
      properties:
        facultyId:
          description: 'код факультета'
          type: integer
        course:
          description: курс
          type: integer
      type: object
    ChairsFilterForm:
      description: 'форма для получения списка кафедр'
      properties:
        structureId:
          description: 'код структуры'
          type: integer
        facultyId:
          description: 'код факультета'
          type: integer
      type: object
    TeachersByChairFilterForm:
      description: 'форма для получения списка преподователй по кафедре'
      required:
        - chairId
      properties:
        chairId:
          description: 'код кафедры'
          type: integer
      type: object
    StudentsByGroupFilterForm:
      description: 'форма для получения списка студентов по группе'
      required:
        - groupId
      properties:
        groupId:
          description: 'код группы'
          type: integer
      type: object
    Course:
      description: 'Моделька для курсов'
      properties:
        course:
          description: курс
          type: integer
      type: object
    LoginForm:
      description: 'форма для авторизации'
      required:
        - username
        - password
        - app_key
      properties:
        username:
          description: username
          type: string
        password:
          description: password
          type: string
        app_key:
          description: app_key
          type: string
      type: object
    AccessToken:
      description: 'Моделька для токена авторизации'
      properties:
        access_token:
          description: токен
          type: string
      type: object
    TeacherIdentifiersForm:
      properties:
        lastId:
          description: lastId
          type: integer
      type: object
    FreeClassroomFilterForm:
      description: 'форма для получения списка свободных аудиторий'
      required:
        - structureId
        - lessonNumberStart
        - lessonNumberEnd
        - date
      properties:
        structureId:
          description: 'код структуры'
          type: integer
        corpusId:
          description: 'код корпуса'
          type: integer
        lessonNumberStart:
          description: 'кномер занятия ''с'''
          type: integer
        lessonNumberEnd:
          description: 'номер занятия ''по'''
          type: integer
        date:
          description: дата
          type: string
          format: date-time
      type: object
    GroupTimeTableForm:
      description: 'форма для получения расписания группы'
      required:
        - groupId
        - dateStart
        - dateEnd
      properties:
        groupId:
          description: 'код группы'
          type: integer
        dateStart:
          description: 'дата начала'
          type: string
          format: date
        dateEnd:
          description: 'дата конца'
          type: string
          format: date
      type: object
    ClassroomTimeTableForm:
      description: 'форма для получения расписания аудитории'
      required:
        - classroomId
        - dateStart
        - dateEnd
      properties:
        classroomId:
          description: 'код аудитории'
          type: integer
        dateStart:
          description: 'дата начала'
          type: string
          format: date
        dateEnd:
          description: 'дата конца'
          type: string
          format: date
      type: object
    StudentTimeTableForm:
      description: 'форма для получения расписания студента'
      required:
        - studentId
        - dateStart
        - dateEnd
      properties:
        studentId:
          description: 'код студента'
          type: integer
        dateStart:
          description: 'дата начала'
          type: string
          format: date
        dateEnd:
          description: 'дата конца'
          type: string
          format: date
      type: object
    TeacherTimeTableForm:
      description: 'форма для получения расписания преподователя'
      required:
        - teacherId
        - dateStart
        - dateEnd
      properties:
        teacherId:
          description: 'преподователя группы'
          type: integer
        dateStart:
          description: 'дата начала'
          type: string
          format: date
        dateEnd:
          description: 'дата конца'
          type: string
          format: date
      type: object
    TimeTableDate:
      description: 'моделька для дня в расписании'
      properties:
        date:
          description: дата
          type: string
          format: date
        lessons:
          description: Пары
          type: array
          items:
            $ref: '#/components/schemas/TimeTableLesson'
      type: object
    TimeTableLesson:
      description: 'моделька для пары в расписании'
      properties:
        number:
          description: 'номер занятия'
          type: integer
        periods:
          description: занятия
          type: array
          items:
            $ref: '#/components/schemas/TimeTablePeriod'
      type: object
    TimeTablePeriod:
      description: 'моделька для занятия в расписании'
      properties:
        disciplineFullName:
          description: 'полное название дисциплины'
          type: string
        disciplineShortName:
          description: 'сокращенное название дисциплины'
          type: string
        classroom:
          description: 'название аудитории'
          type: string
        timeStart:
          description: 'время начала'
          type: string
          format: time
        timeEnd:
          description: 'время конца'
          type: string
          format: time
        teachersName:
          description: 'сокращенные имена преподователей'
          type: string
        teachersNameFull:
          description: 'ФИО преподователей'
          type: string
        type:
          description: 'тип занятия'
          type: integer
        dateUpdated:
          description: 'дата послденего обновления'
          type: string
          format: date-time
        nonstandardTime:
          description: 'нестандартное время занятия'
          type: boolean
        groups:
          description: 'Названия групп'
          type: string
          nullable: true
      type: object
    CallSchedule:
      description: 'Моделька для пар'
      properties:
        timeStart:
          description: 'время начала'
          type: string
          format: time
        timeEnd:
          description: 'время конца'
          type: string
          format: time
        number:
          description: номер
          type: integer
        length:
          description: длительность
          type: number
      type: object
    Classroom:
      description: 'Моделька для учебных аудиторий'
      properties:
        id:
          description: 'id аудитории'
          type: integer
        name:
          description: 'название аудитории'
          type: string
        countPlace:
          description: 'количетсво мест'
          type: integer
        type:
          description: 'тип 0-учебная 1-лаборатори'
          type: integer
      type: object
    Document:
      description: 'Моделька для документа(в документообороте)'
      properties:
        id:
          description: 'id документа'
          type: integer
        name:
          description: 'название документа'
          type: string
        dateCreate:
          description: 'дата создания'
          type: string
          format: date-time
        dateUpdate:
          description: 'дата редактирования'
          type: string
          format: date-time
        url:
          description: 'ссылка на просмотр'
          type: string
          format: uri
      type: object
    DocumentControl:
      description: 'Моделька для документов на контроле'
      allOf:
        -
          $ref: '#/components/schemas/Document'
        -
          properties:
            dateControl:
              description: 'дата контрола'
              type: string
              format: date-time
          type: object
    Group:
      description: 'Моделька для групп'
      properties:
        id:
          description: 'id группы'
          type: integer
        name:
          description: 'название группы'
          type: string
        course:
          description: 'курс группы'
          type: integer
        priority:
          description: 'приоритет вывода'
          type: integer
        educationForm:
          description: 'форма обучения'
          type: integer
      type: object
    Student:
      description: 'Моделька для Студентов'
      allOf:
        -
          $ref: '#/components/schemas/Person'
    Person:
      description: 'Моделька для персон'
      properties:
        id:
          description: 'id преподавателя'
          type: integer
        firstName:
          description: 'имя преподавателя'
          type: string
        secondName:
          description: 'отчество преподавателя'
          type: string
        lastName:
          description: 'фамилия преподавателя'
          type: string
      type: object
    TeacherByName:
      description: 'Моделька для поиска преподователя'
      allOf:
        -
          $ref: '#/components/schemas/Person'
        -
          properties:
            chairName:
              description: 'название кафедры'
              type: string
          type: object
    Chair:
      description: 'Моделька для кафедр'
      properties:
        id:
          description: 'id кафедры'
          type: integer
        shortName:
          description: 'абривиатура кафедры'
          type: string
        fullName:
          description: 'название кафедры'
          type: string
      type: object
    Discipline:
      description: 'Моделька для дисциплин'
      properties:
        id:
          description: 'id дисциплины'
          type: integer
        shortTitle:
          description: 'абривиатура дисциплины'
          type: string
        title:
          description: 'название дисциплины'
          type: string
      type: object
    Faculty:
      description: 'Моделька для факультетов'
      properties:
        id:
          description: 'id факультета'
          type: integer
        shortName:
          description: 'абривиатура факультета(Зависит от языка приложения)'
          type: string
        fullName:
          description: 'название факультета(Зависит от языка приложения)'
          type: string
      type: object
    Structure:
      description: 'Моделька для структур'
      properties:
        id:
          description: 'id структуры'
          type: integer
        shortName:
          description: 'абривиатура структуры(Зависит от языка приложения)'
          type: string
        fullName:
          description: 'название структуры(Зависит от языка приложения)'
          type: string
      type: object
    User:
      description: 'Моделька для пользователей'
      properties:
        id:
          description: 'id пользователя'
          type: integer
        username:
          description: логин
          type: string
        email:
          description: почта
          type: string
          format: email
        type:
          description: 'тип персоны пользователя'
          type: integer
        person:
          description: 'персоны пользователя (студент или Преподаватель)'
          $ref: '#/components/schemas/Person'
      type: object
    AcademLoad:
      description: 'Моделька для учебных планов'
      properties:
        id:
          description: Индификатор
          type: integer
        teacherId:
          description: 'Код преподавателя'
          type: integer
        hours:
          description: часы
          type: integer
          format: double
        learningActivityType:
          description: 'тип занятия'
          type: integer
        type:
          description: Тип
          type: string
      type: object
    AcademDiscipline:
      description: 'Моделька для отдачи дисциплин учебного план'
      allOf:
        -
          $ref: '#/components/schemas/Discipline'
        -
          properties:
            learningPlans:
              description: 'Учебный план по дисциплине'
              type: array
              items:
                $ref: '#/components/schemas/AcademLearningPlan'
            teachersIds:
              description: 'список кодов преподавателей'
              type: array
              items:
                type: integer
          type: object
    AcademLearningPlan:
      description: 'Моделька для учебных планов'
      properties:
        hoursId:
          description: 'Ключ, вместе с groupId'
          type: integer
        groupId:
          description: 'Код группы (Ключ, вместе с hoursId)'
          type: integer
        chairId:
          description: 'Код кафедры'
          type: integer
        course:
          description: Курс
          type: integer
        specialityId:
          description: 'Код специальности'
          type: integer
        semesterOfYear:
          type: integer
        academicLoads:
          description: 'Нагрузка преподавателей'
          type: array
          items:
            $ref: '#/components/schemas/AcademLoad'
      type: object
    OrgChair:
      allOf:
        -
          $ref: '#/components/schemas/Chair'
        -
          description: 'Моделька для кафедр (Org)'
          properties:
            id:
              description: 'id кафедры'
              type: integer
            shortName:
              description: 'абривиатура кафедры'
              type: string
            fullName:
              description: 'название кафедры'
              type: string
            shortNameLatin:
              description: 'абривиатура кафедры (английский язык)'
              type: string
            fullNameLatin:
              description: 'название кафедры (английский язык)'
              type: string
            deleted:
              description: 'дата удаления кафедры'
              type: string
              format: datetime
            structureId:
              description: 'id структуры'
              type: integer
            structureGuid:
              description: 'guid структуры'
              type: string
              format: guid
            facultyId:
              description: 'id факультета'
              type: integer
            facultyGuid:
              description: 'guid факультета'
              type: string
              format: guid
            guid:
              description: 'guid кафедры'
              type: string
              format: guid
          type: object
    OrgFaculty:
      allOf:
        -
          $ref: '#/components/schemas/Faculty'
        -
          description: 'Моделька для факультетов (Org)'
          properties:
            id:
              description: 'id факультета'
              type: integer
            shortName:
              description: 'абривиатура факультета'
              type: string
            fullName:
              description: 'название факультета'
              type: string
            shortNameLatin:
              description: 'абривиатура факультета (английский язык)'
              type: string
            fullNameLatin:
              description: 'название факультета (английский язык)'
              type: string
            deleted:
              description: 'дата факультета'
              type: string
              format: datetime
            structureId:
              description: 'id структуры'
              type: integer
            structureGuid:
              description: 'guid структуры'
              type: string
              format: guid
            guid:
              description: 'guid факультета'
              type: string
              format: guid
          type: object
    OrgStructure:
      allOf:
        -
          $ref: '#/components/schemas/Structure'
        -
          description: 'Моделька для структур (Org)'
          properties:
            id:
              description: 'id структуры'
              type: integer
            guid:
              description: 'guid структуры'
              type: string
              format: guid
            shortName:
              description: 'абривиатура структуры'
              type: string
            fullName:
              description: 'название структуры'
              type: string
            shortNameLatin:
              description: 'абривиатура структуры (английский язык)'
              type: string
            fullNameLatin:
              description: 'название структуры (английский язык)'
              type: string
            deleted:
              description: 'дата удаления'
              type: string
              format: datetime
            type:
              description: 'тип структуры 0-ВУЗ 1-техникум'
              type: integer
          type: object
    TeacherIdentifier:
      description: 'Моделька для преподователей (связь с другими системами)'
      properties:
        id:
          description: 'id преподавателя'
          type: integer
        hash:
          description: hash
          type: string
      type: object
    MarkDocsForm:
      description: 'форма для пометки документов как прочитаного'
      required:
        - docs
      properties:
        docs:
          description: 'список кодов документов'
          type: array
          items:
            type: integer
      type: object
    DocsOnControlForm:
      description: 'форма для получения списка документов на контроле'
      required:
        - countDays
      properties:
        countDays:
          description: 'За сколько дней до необходимой даты отображать'
          type: integer
      type: object
    TeacherSearch:
      description: 'форма поиска преподователя по имени'
      required:
        - name
      properties:
        name:
          description: 'строка для поиска'
          type: string
      type: object
  responses:
    '500':
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorModel'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorModel'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorModel'
    '422':
      description: 'Validation error'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ErrorValidationField'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  -
    name: User
    description: 'Методы для пользователей'
  -
    name: Docs
    description: Документооборот
  -
    name: List
    description: 'Списки(метобы для получения данных в фильтры)'
  -
    name: Org
    description: Справочники/Организация
  -
    name: TimeTable
    description: Расписание
  -
    name: Other
    description: Другие
  -
    name: General
    description: Основные
  -
    name: Academ
    description: 'Учебные планы'
externalDocs:
  description: 'Дополнительная документация'
  url: 'https://bitbucket.org/lesha724/mkp-portal/wiki/ExternalRestDocs'
